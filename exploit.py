#!/usr/bin/env python3

import socket
import sys
import telnetlib

def _p32(num):
    return num.to_bytes(4, byteorder='little')

def _p64(num):
    return num.to_bytes(8, byteorder='little')

def u32(byte_string):
    byte4 = byte_string.ljsut(4, b'\0')
    return int.from_bytes(byte4, byteorder='little')

def u64(byte_string):
    byte8 = byte_string.ljust(8, b'\0')
    return int.from_bytes(byte8, byteorder='little')

def p32(*nums):
    data = b''
    for num in nums:
        data += _p32(num)
    return data

def p64(*nums):
    data = b''
    for num in nums:
        data += _p64(num)
    return data

class PwnSocket:
    def __init__(self, ip, port):
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.connect((ip, port))

    def shell(self):
        tel = telnetlib.Telnet()
        tel.sock = self.sock
        tel.interact()

    def print_send(self, message):
        print(message.decode('ascii', 'backslashreplace'), end='')
        self.sock.send(message)

    def recv_until(self, delimiter_bytes):
        received_data = b''
        while not received_data.endswith(delimiter_bytes):
            buf = self.sock.recv(1)
            print(buf.decode('ascii', 'backslashreplace'), end='')
            received_data += buf
        return received_data

port = 11111
hostname = ''
if len(sys.argv) == 2 and sys.argv[1] == '--remote':
    hostname = 'www.google.com'
else:
    hostname = 'localhost'

ip = socket.gethostbyname(hostname)
ps = PwnSocket(ip, port)
ps.shell()
